---
// --- IMPORTS ---
// Mantenemos los mismos imports que ya tenías
import Layout from '../../layouts/Layout.astro'; // Ajusta la ruta si es necesario
import HeroPages from '../../components/HeroPages.astro'; // Ajusta la ruta si es necesario
import EntradasCard from '../../components/EntradasCard.astro'; // Ajusta la ruta si es necesario

import { getLatestposts } from '../../lib/wp'; // Ajusta la ruta si es necesario

// --- FUNCIÓN getStaticPaths CON PAGINACIÓN ---
// Esta es la magia de Astro. getStaticPaths se ejecuta en el servidor durante la compilación
// para generar todas las páginas necesarias.
export async function getStaticPaths({ paginate }) {
  // 1. Obtenemos TODOS los posts una sola vez.
  const allPosts = await getLatestposts({ perPage: 100 }); // Puedes aumentar perPage si tienes más de 100 posts

  // 2. Usamos la función `paginate` de Astro.
  // Le pasamos la lista completa de posts y le decimos cuántos queremos por página.
  return paginate(allPosts, { pageSize: 2 });
}

// --- LÓGICA DEL COMPONENTE ---
// Astro nos pasa la información de la página actual a través de `Astro.props`.
// La variable `page` contiene los datos de la paginación.
const { page } = Astro.props;

// `page.data` contiene el array de posts solo para ESTA página (en tu caso, 2 posts).
const postsDeEstaPagina = page.data;
---

<Layout title={`Blog - Página ${page.currentPage}`}>
    <HeroPages title="Blog"/>

    <section class="flex sm:flex-row flex-col justify-center items-start mt-16 w-full h-auto">
        <article class="flex flex-col sm:gap-16 gap-6 items-center sm:justify-start justify-center m-auto w-4/5 h-full min-h-[50vh]">
            
            <!-- Iteramos solo sobre los posts de la página actual -->
            {postsDeEstaPagina.map((post) => <EntradasCard {...post}/> )}
            
        </article>
    </section>

    <!-- SECCIÓN DE PAGINACIÓN -->
    <section class="flex justify-center items-center gap-4 mt-12 mb-16">
        <!-- Botón "Anterior": Solo se muestra si hay una página previa -->
        {page.url.prev && (
            <a href={page.url.prev} class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 transition-colors">
                « Anterior
            </a>
        )}

        <!-- Indicador de página actual -->
        <span class="text-gray-600">
            Página {page.currentPage} de {page.totalPages}
        </span>

        <!-- Botón "Siguiente": Solo se muestra si hay una página siguiente -->
        {page.url.next && (
            <a href={page.url.next} class="px-4 py-2 bg-gray-200 text-gray-800 rounded-md hover:bg-gray-300 transition-colors">
                Siguiente »
            </a>
        )}
    </section>
</Layout>